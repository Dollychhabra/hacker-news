{"version":3,"sources":["containers/organisms/HomePage/selectors.js","containers/organisms/HomePage/constants.js","containers/organisms/HomePage/actions.js","commons/utils/url.js","components/atoms/Anchor/Anchor.js","components/molecules/Header/Header.js","components/atoms/Image/Image.js","components/atoms/Para/Para.js","components/molecules/List/List.js","utils/dateTime.js","utils/localStorage.js","containers/atoms/Hide/constants.js","containers/atoms/UpVote/constants.js","containers/organisms/HomePage/utils.js","components/atoms/UpVote/UpVote.js","containers/atoms/UpVote/UpVote.js","containers/atoms/UpVote/actions.js","components/atoms/Hide/Hide.js","containers/atoms/Hide/Hide.js","containers/atoms/Hide/actions.js","components/atoms/LoadMore/LoadMore.js","containers/atoms/LoadMore/LoadMore.js","components/organisms/HomePage/HomePage.js","containers/organisms/HomePage/HomePage.js","serviceWorker.js","utils/history.js","containers/organisms/HomePage/reducer.js","commons/initialState/homePage.state.js","commons/constants/api.services.js","commons/utils/ServiceUtil.js","containers/organisms/HomePage/sagas.js","commons/constants/index.js","containers/atoms/UpVote/sagas.js","containers/atoms/Hide/sagas.js","sagas.js","store.js","reducers.js","index.js"],"names":["getHomePageDataState","state","homePageData","selectHomePageData","createSelector","homePageDataState","data","selectTotalPageData","nbPages","selectCurrentPageData","page","FETCH_HOME_PAGE_DATA","FETCH_HOME_PAGE_DATA_ERROR","fetchHomePageData","params","type","buildUrl","options","pathName","query","url","queryParams","keys","Object","i","l","length","value","push","join","createQueryParamsUrl","Anchor","children","to","className","handleClick","target","others","href","onClick","defaultProps","Header","props","item","style","Fragment","name","Image","src","srcset","alt","sizes","other","srcSet","onError","e","display","Para","inheritedStyles","List","ListType","borderseparator","nodefaultview","inline","nested","nomargin","templates","prefix","suffix","seconds","minute","minutes","hour","hours","day","days","month","months","year","years","template","t","n","replace","Math","abs","round","timer","time","sinceAgoDate","now","Date","getTime","LocalStorageUtil","getItem","key","isStorageUsable","storage","saveItem","setItem","removeItem","saveItemInArray","ids","JSON","parse","stringify","removeItemFromArray","items","itemIndex","findIndex","splice","this","window","localStorage","code","DOMException","QUOTA_EXCEEDED_ERR","HIDE_DATA","VOTE_KEY","VOTE","removeHomePageData","homePageState","objectID","hits","dataIndex","UpVote","vote","objectId","voted","preventDefault","connect","dispatch","Hide","hideData","itemId","LoadMore","currentPage","totalPages","cp","isVisible","mapStateToProps","createStructuredSelector","HomePage","votedData","votedDataIds","votedHits","map","hit","cloneHit","indexOf","updateUpVoteInHomePageData","hiddenDataIds","filteredHits","filter","filterDataWithHiddenData","width","height","linkItem","num_comments","points","title","nonEmptyUrl","urlParts","split","extractDomainFromUrl","author","created_at_i","Boolean","location","hostname","match","history","initialState","isFetching","error","homePageDataReducer","document","createBrowserHistory","require","apis","search","es6promise","polyfill","basePath","process","API_BASE_PATH","fetch","bind","additionalFetchOptions","reqOptions","withCredentials","axios","response","responseData","loadHomePageSaga","homePageSaga","updateQueryParams","queryParamsUrl","action","tags","call","ServiceUtil","put","takeLatest","saveUpVoteSaga","upVoteSaga","saveHideDataSaga","hideDataSaga","rootSaga","all","voteSaga","sagaMiddleware","createSagaMiddleware","configureStore","preloadedState","store","createStore","combineReducers","composeWithDevTools","applyMiddleware","run","allSagas","__STATE__","ReactDOM","hydrate","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.13c3e8e7.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\n\nconst getHomePageDataState = state => {\n  return state.homePageData;\n};\n\nexport const selectHomePageData = createSelector(\n  getHomePageDataState,\n  homePageDataState => homePageDataState.data,\n);\n\nexport const selectTotalPageData = createSelector(\n  getHomePageDataState,\n  homePageDataState => homePageDataState.data.nbPages,\n);\n\nexport const selectCurrentPageData = createSelector(\n  getHomePageDataState,\n  homePageDataState => homePageDataState.data.page,\n);\n","export const FETCH_HOME_PAGE_DATA =\n  'HACKER_NEWS_APP/HOME_PAGE/FETCH_HOME_PAGE_DATA';\nexport const FETCH_HOME_PAGE_DATA_SUCCESS =\n  'HACKER_NEWS_APP/HOME_PAGE/FETCH_HOME_PAGE_DATA_SUCCESS';\nexport const FETCH_HOME_PAGE_DATA_ERROR =\n  'HACKER_NEWS_APP/HOME_PAGE/FETCH_HOME_PAGE_DATA_ERROR';\n","import {\n  FETCH_HOME_PAGE_DATA,\n  FETCH_HOME_PAGE_DATA_SUCCESS,\n  FETCH_HOME_PAGE_DATA_ERROR,\n} from './constants';\n\nexport const fetchHomePageData = params => ({\n  type: FETCH_HOME_PAGE_DATA,\n  params,\n});\n\nexport const fetchHomePageDataSuccess = data => ({\n  type: FETCH_HOME_PAGE_DATA_SUCCESS,\n  data,\n});\n\nexport const fetchHomePageDataError = error => ({\n  type: FETCH_HOME_PAGE_DATA_ERROR,\n  error,\n});\n","/**\n *\n * @param {Object} query - Object of query params\n * @returns {String}\n */\nexport const createQueryParamsUrl = (query = {}) => {\n  const queryParams = [];\n\n  const keys = Object.keys(query);\n\n  for (let i = 0, l = keys.length; i < l; i += 1) {\n    const value = `${query[keys[i]]}`;\n    queryParams.push(`${keys[i]}=${value}`);\n  }\n\n  return queryParams.join('&');\n};\n\n/**\n *\n * @param {Object} options - Url options\n * @returns {String} - Url\n * @description - Creates a url with query params\n */\nexport const buildUrl = options => {\n  if (typeof options === 'object') {\n    const { pathName, query } = options;\n\n    let url = pathName;\n\n    if (typeof query === 'object') {\n      url += `?${createQueryParamsUrl(query)}`;\n    }\n    return url;\n  }\n\n  return options;\n};\n\nexport const extractDomainFromUrl = (url = '') => {\n  const nonEmptyUrl = url || '';\n  const urlParts = nonEmptyUrl\n    .replace('http://', '')\n    .replace('https://', '')\n    .split(/[/?#]/);\n  return urlParts[0];\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { buildUrl } from '../../../commons/utils/url';\n\nconst Anchor = ({\n  children,\n  to,\n  className,\n  handleClick,\n  target,\n  ...others\n}) => (\n  <a\n    {...others}\n    href={buildUrl(to)}\n    className={className}\n    onClick={handleClick}\n    target={target}\n  >\n    {children}\n  </a>\n);\n\nAnchor.defaultProps = {\n  className: '',\n  target: '_self',\n  handleClick: () => {},\n  to: '',\n};\n\nAnchor.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  handleClick: PropTypes.func,\n  to: PropTypes.any,\n  target: PropTypes.oneOf(['', '_self', '_blank', '_parent', '_top']),\n};\n\nexport default Anchor;\n","import React from 'react';\nimport Anchor from '../../atoms/Anchor/Anchor';\n\nconst Header = (props) => {\n  const { item, className,style } = props;\n  return (\n    <React.Fragment>\n      <div className={className} style={style}>\n        <Anchor keys={item.name} to={item.url}>\n          {item.name}\n        </Anchor>\n      </div>\n    </React.Fragment>\n  );\n};\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  alt: PropTypes.string.isRequired,\n  srcset: PropTypes.string,\n  src: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n\nconst Image = ({ className, src, srcset, sizes, alt, ...other }) => {\n  function addErrorClass(e) {\n    e.target.style.display = 'none';\n  }\n\n  return (\n    <React.Fragment>\n      <img\n        className={className}\n        src={src}\n        srcSet={srcset || null}\n        alt={alt}\n        onError={addErrorClass}\n        {...other}\n      />\n    </React.Fragment>\n  );\n};\n\nImage.defaultProps = {\n  srcset: '',\n  className: '',\n};\n\nImage.propTypes = propTypes;\n\nexport default Image;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  inheritedStyles: PropTypes.string,\n};\n\nconst Para = ({ children, className, inheritedStyles, ...others }) => (\n  <p className={className} {...others}>\n    {children}\n  </p>\n);\n\nPara.defaultProps = {\n  inheritedStyles: '',\n  className: '',\n};\n\nPara.propTypes = propTypes;\n\nexport default Para;\n","/* List*/\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  ListType: PropTypes.oneOf(['ul', 'ol']),\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  nested: PropTypes.bool,\n  inline: PropTypes.bool,\n  nodefaultview: PropTypes.bool,\n  borderseparator: PropTypes.bool,\n  nomargin: PropTypes.bool,\n  inheritedStyles: PropTypes.string,\n};\n\nconst List = ({ className, ListType, children, ...others }) => (\n  <ListType className={className} {...others}>\n    {children}\n  </ListType>\n);\n\nList.propTypes = propTypes;\n\nList.defaultProps = {\n  inheritedStyles: '',\n  ListType: 'ul',\n  className: '',\n  borderseparator: false,\n  nodefaultview: false,\n  inline: false,\n  nested: false,\n  nomargin: false,\n};\n\nexport default List;\n","const templates = {\n  prefix: '',\n  suffix: ' ago',\n  seconds: 'less than a minute',\n  minute: 'about a minute',\n  minutes: '%d minutes',\n  hour: 'about an hour',\n  hours: 'about %d hours',\n  day: 'a day',\n  days: '%d days',\n  month: 'about a month',\n  months: '%d months',\n  year: 'about a year',\n  years: '%d years',\n};\nconst template = (t, n) => {\n  return templates[t] && templates[t].replace(/%d/i, Math.abs(Math.round(n)));\n};\n\n// eslint-disable-next-line complexity\nconst timer = (time, sinceAgoDate = null) => {\n  if (!time) return null;\n\n  const now = sinceAgoDate ? new Date(sinceAgoDate) : new Date();\n  const seconds = now.getTime() * 0.001 - time;\n  const minutes = seconds / 60;\n  const hours = minutes / 60;\n  const days = hours / 24;\n  const years = days / 365;\n\n  return (\n    templates.prefix +\n    ((seconds < 45 && template('seconds', seconds)) ||\n      (seconds < 90 && template('minute', 1)) ||\n      (minutes < 45 && template('minutes', minutes)) ||\n      (minutes < 90 && template('hour', 1)) ||\n      (hours < 24 && template('hours', hours)) ||\n      (hours < 42 && template('day', 1)) ||\n      (days < 30 && template('days', days)) ||\n      (days < 45 && template('month', 1)) ||\n      (days < 365 && template('months', days / 30)) ||\n      (years < 1.5 && template('year', 1)) ||\n      template('years', years)) +\n    templates.suffix\n  );\n};\n\nexport default timer;\n","/**\n *\n * A Utility to store Key Pair value in localStorage\n */\n\nexport class LocalStorageUtil {\n  constructor() {\n    this.storage = {};\n    if (isStorageUsable()) {\n      this.storage = window.localStorage;\n    }\n  }\n\n  /**\n   *\n   * @param {string} - Key name\n   * @description - Get Value from localStorage\n   */\n  getItem = key => {\n    return isStorageUsable() && typeof this.storage !== 'undefined'\n      ? this.storage.getItem(key)\n      : '';\n  };\n\n  /**\n   *\n   * @param { string } key - Key Name\n   * @param { string } value - Key Value\n   * @description - Save Value against key into localStorage\n   */\n  saveItem = (key, value) => {\n    if (isStorageUsable()) {\n      this.storage.setItem(key, value);\n    }\n  };\n\n  /**\n   *\n   * @param { string } name Key Name\n   * @description - Remove `Key Value Pair` from localStorage\n   */\n  removeItem = key => {\n    if (isStorageUsable()) {\n      this.storage.removeItem(key);\n    }\n  };\n\n  /**\n   *\n   * @param { string } key - Key Name\n   * @param { string } value - Key Value\n   * @description - Saves Value in Array against key into localStorage\n   */\n  saveItemInArray = (key, value) => {\n    const ids = JSON.parse(this.getItem(key) || '[]');\n    ids.push(value);\n    this.saveItem(key, JSON.stringify(ids));\n  };\n\n  /**\n   *\n   * @param { string } key - Key Name\n   * @param { string } value - Key Value\n   * @description - Removes Value from Array against key into localStorage\n   */\n  removeItemFromArray = (key, value) => {\n    const items = JSON.parse(this.getItem(key) || '[]');\n    const itemIndex = items.findIndex(item => item === value);\n    items.splice(itemIndex, 1);\n    this.saveItem(key, JSON.stringify(items));\n  };\n}\n\n/**\n *\n * @description - Checks is local storage available or not\n */\nexport const isStorageUsable = () => {\n  if (typeof window === 'undefined') {\n    return false;\n  }\n  const storage = window.localStorage;\n  try {\n    storage.setItem('testkey', 'test');\n    storage.removeItem('testkey');\n  } catch (e) {\n    if (e.code === DOMException.QUOTA_EXCEEDED_ERR && storage.length === 0) {\n      return false;\n    }\n  }\n  return true;\n};\n","export const HIDE_DATA_KEY = 'HACKER_NEWS_APP/HOME_PAGE/HIDE_DATA_KEY';\nexport const HIDE_DATA = 'HACKER_NEWS_APP/HOME_PAGE/HIDE_DATA';\n","export const VOTE_KEY = 'HACKER_NEWS_APP/HOME_PAGE/VOTE_KEY';\nexport const VOTE = 'HACKER_NEWS_APP/HOME_PAGE/VOTE';\n","import { LocalStorageUtil } from '../../../utils/localStorage';\nimport { HIDE_DATA_KEY } from '../../atoms/Hide/constants';\nimport { VOTE_KEY } from '../../atoms/UpVote/constants';\n\nexport const removeHomePageData = (homePageState, objectID) => {\n  const { data, ...others } = homePageState;\n  const { hits } = data;\n\n  const dataIndex = hits.findIndex(data => {\n    return data.objectID === objectID;\n  });\n\n  hits.splice(dataIndex, 1);\n\n  return {\n    data: {\n      ...data,\n      hits: [...hits],\n    },\n    ...others,\n  };\n};\n\nexport const filterDataWithHiddenData = homePageData => {\n  const storage = new LocalStorageUtil();\n\n  const hiddenDataIds = JSON.parse(storage.getItem(HIDE_DATA_KEY) || '[]');\n\n  if (hiddenDataIds.length) {\n    const { hits } = homePageData;\n    const filteredHits = hits.filter(hit => {\n      return hiddenDataIds.indexOf(hit.objectID) === -1;\n    });\n\n    return {\n      ...homePageData,\n      hits: filteredHits,\n    };\n  }\n  return homePageData;\n};\n\nexport const updateUpVoteInHomePageData = homePageData => {\n  const storage = new LocalStorageUtil();\n\n  const votedDataIds = JSON.parse(storage.getItem(VOTE_KEY) || '[]');\n\n  if (votedDataIds.length) {\n    const { hits } = homePageData;\n    const votedHits = hits.map(hit => {\n      const cloneHit = { ...hit };\n\n      if (votedDataIds.indexOf(cloneHit.objectID) > -1) {\n        cloneHit.voted = true;\n      }\n\n      return cloneHit;\n    });\n\n    return {\n      ...homePageData,\n      hits: votedHits,\n    };\n  }\n  return homePageData;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Anchor from '../Anchor';\nimport './UpVote.scss';\n\nconst UpVote = ({ vote, objectId, voted }) => {\n  return voted ? (\n    ' '\n  ) : (\n    <Anchor\n      onClick={e => {\n        e.preventDefault();\n        vote({\n          objectId,\n          voted: true,\n        });\n      }}\n      className=\"up-vote-link\"\n    >\n      <div className=\"up-vote-arrow\" />\n    </Anchor>\n  );\n};\n\nUpVote.propTypes = {\n  objectId: PropTypes.string.isRequired,\n  vote: PropTypes.func.isRequired,\n  voted: PropTypes.bool,\n};\n\nUpVote.defaultProps = {\n  voted: false,\n};\n\nexport default UpVote;\n","import { connect } from 'react-redux';\n\nimport { vote } from './actions';\n\nimport UpVote from '../../../components/atoms/UpVote';\n\nexport const mapDispatchToProps = dispatch => {\n  return {\n    vote: data => {\n      dispatch(vote(data));\n    },\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(UpVote);\n","import { VOTE } from './constants';\n\nexport const vote = data => ({\n  type: VOTE,\n  data,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Hide.scss';\nimport Anchor from '../Anchor';\n\nconst Hide = ({ hideData, objectId }) => {\n  return (\n    <Anchor\n      className=\"hide-btn\"\n      handleClick={e => {\n        e.preventDefault();\n        hideData(objectId);\n      }}\n    >\n      hide\n    </Anchor>\n  );\n};\n\nHide.propTypes = {\n  hideData: PropTypes.func.isRequired,\n  objectId: PropTypes.string.isRequired,\n};\n\nexport default Hide;\n","import { connect } from 'react-redux';\n\nimport { hideData } from './actions';\n\nimport Hide from '../../../components/atoms/Hide';\n\nexport const mapDispatchToProps = dispatch => {\n  return {\n    hideData: itemId => {\n      dispatch(hideData(itemId));\n    },\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(Hide);\n","import { HIDE_DATA } from './constants';\n\nexport const hideData = data => ({\n  type: HIDE_DATA,\n  data,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Anchor from '../Anchor';\nimport './LoadMore.scss';\n\nconst isVisible = (currentPage, totalPages) => {\n  return !!(totalPages && currentPage !== totalPages);\n};\n\nconst LoadMore = ({ currentPage, fetchHomePageData, totalPages }) => {\n  const cp = currentPage + 1;\n  return (\n    isVisible(cp, totalPages) && (\n      <div className=\"load-more sm-text-center md-text-initial\">\n        <Anchor\n          handleClick={e => {\n            e.preventDefault();\n            fetchHomePageData({ page: cp });\n          }}\n          className=\"load-more-link\"\n        >\n          More\n        </Anchor>\n      </div>\n    )\n  );\n};\n\nLoadMore.propTypes = {\n  currentPage: PropTypes.number.isRequired,\n  fetchHomePageData: PropTypes.func.isRequired,\n  totalPages: PropTypes.number.isRequired,\n};\n\nexport default LoadMore;\n","import { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport {\n  selectTotalPageData,\n  selectCurrentPageData,\n} from '../../organisms/HomePage/selectors';\nimport { fetchHomePageData } from '../../organisms/HomePage/actions';\n\nimport LoadMore from '../../../components/atoms/LoadMore';\n\nexport const mapStateToProps = createStructuredSelector({\n  currentPage: selectCurrentPageData,\n  totalPages: selectTotalPageData,\n});\n\nexport const mapDispatchToProps = dispatch => {\n  return {\n    fetchHomePageData: params => {\n      dispatch(fetchHomePageData(params));\n    },\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(LoadMore);\n","import React from 'react';\nimport Header from '../../molecules/Header/Header';\nimport Anchor from '../../atoms/Anchor/Anchor';\nimport Image from '../../atoms/Image/Image';\nimport Para from '../../atoms/Para/Para';\nimport List from '../../molecules/List/List';\nimport timer from '../../../utils/dateTime';\nimport { extractDomainFromUrl } from '../../../commons/utils/url';\nimport {\n  filterDataWithHiddenData,\n  updateUpVoteInHomePageData,\n} from '../../../containers/organisms/HomePage/utils';\nimport './HomePage.scss';\nimport Vote from '../../../containers/atoms/UpVote/UpVote';\nimport Hide from '../../../containers/atoms/Hide/Hide';\nimport LoadMore from '../../../containers/atoms/LoadMore/LoadMore';\n\nconst HomePage = ({ homePageData }) => {\n  const filteredData = filterDataWithHiddenData(homePageData);\n  const votedData = updateUpVoteInHomePageData(filteredData);\n\n  const hits = votedData && votedData.hits ? votedData.hits : '';\n\n  const anchorArray = [\n    {\n      name: 'top',\n    },\n    {\n      name: 'new',\n    },\n  ];\n\n  return (\n    <div className=\"homepage\">\n      <div className=\"homepage-header flex align-center\">\n        <Anchor className=\"hompage-header-icon\">\n          <Image\n            src=\"y18.gif\"\n            width=\"18\"\n            height=\"18\"\n            className=\"header-image\"\n          />\n        </Anchor>\n        {anchorArray.map((linkItem) => (\n          <Header item={linkItem} className=\"header-container\" />\n        ))}\n      </div>\n      <List className=\"list-container\">\n        {hits &&\n          hits.map((item) => {\n            return (\n              <div className=\"list-content flex align-center\">\n                <div className=\"comments\">{item.num_comments}</div>\n                <div className=\"points flex\">\n                  {item.points}\n\n                  {!item.voted && <Vote objectId={item.objectID} />}\n                </div>\n                <Para className=\"story-details\">\n                  <span className=\"story-title\">{item.title}</span>\n                  <span className=\"story-url\">{`(${extractDomainFromUrl(\n                    item.url,\n                  )})`}</span>\n                  <span className=\"keyword-by\">by</span>\n                  <span className=\"story-author\">{item.author}</span>\n                  <span className=\"story-time\">\n                    {timer(item.created_at_i)}\n                  </span>\n                  <span className=\"hide-brackets\">[</span>\n                  <Hide objectId={item.objectID} />\n                  <span className=\"hide-brackets\">]</span>\n                </Para>\n              </div>\n            );\n          })}\n      </List>\n      <LoadMore />\n    </div>\n  );\n};\n\nexport default HomePage;\n","import { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { selectHomePageData } from './selectors';\nimport { fetchHomePageData } from './actions';\n\nimport HomePage from '../../../components/organisms/HomePage/HomePage';\n\nexport const mapStateToProps = createStructuredSelector({\n  homePageData: selectHomePageData,\n});\n\nexport const mapDispatchToProps = dispatch => {\n  return {\n    fetchHomePageData: () => {\n      dispatch(fetchHomePageData());\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(HomePage);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// eslint-disable-next-line import/no-mutable-exports\nlet history;\n\nif (typeof document !== 'undefined') {\n  // eslint-disable-next-line global-require\n  const { createBrowserHistory } = require('history');\n\n  history = createBrowserHistory();\n}\n\nexport default history;\n","import {\n  FETCH_HOME_PAGE_DATA,\n  FETCH_HOME_PAGE_DATA_SUCCESS,\n  FETCH_HOME_PAGE_DATA_ERROR,\n} from './constants';\n\nimport { VOTE } from '../../atoms/UpVote/constants';\nimport { HIDE_DATA } from '../../atoms/Hide/constants';\n\n\nimport homePageInitialState from '../../../commons/initialState/homePage.state';\n\nimport { removeHomePageData } from './utils';\n\nconst initialState = homePageInitialState;\n\nconst homePageDataReducer = (state = initialState, { type, data, error }) => {\n  switch (type) {\n    case FETCH_HOME_PAGE_DATA:\n      return {\n        ...state,\n        isFetching: true,\n      };\n\n    case FETCH_HOME_PAGE_DATA_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        data,\n      };\n\n    case FETCH_HOME_PAGE_DATA_ERROR:\n      return {\n        ...state,\n        isFetching: false,\n        error,\n      };\n\n    case HIDE_DATA:\n      return removeHomePageData(state, data);\n\n    case VOTE:\n      return {\n        ...state,\n        data: { ...state.data },\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default homePageDataReducer;\n","const homePageState = {\n  isFetching: false,\n  data: {\n    hits: [],\n    nbPages: 0,\n    page: 0,\n  },\n  error: null,\n};\n\nexport default homePageState;\n","const apis = {\n  search: 'https://hn.algolia.com/api/v1/search',\n};\n\nexport default apis;\n","import axios from 'axios';\nimport es6promise from 'es6-promise';\n\nes6promise.polyfill();\n\nclass ServiceUtils {\n  constructor() {\n    this.basePath = process.env.API_BASE_PATH || '';\n    this.fetch = this.fetch.bind(this);\n  }\n\n  async fetch(url, additionalFetchOptions) {\n    let responseData;\n\n    // Request options in axios format\n    const reqOptions = {\n      url: `${this.basePath}${url}`,\n      withCredentials: false,\n      ...additionalFetchOptions,\n    };\n\n    try {\n      const response = await axios(reqOptions);\n      responseData = response.data;\n    } catch (err) {\n      throw err;\n    }\n\n    return responseData;\n  }\n}\n\nexport default new ServiceUtils();\n","import { call, put, takeLatest } from 'redux-saga/effects';\nimport history from '../../../utils/history';\n\nimport { fetchHomePageDataSuccess, fetchHomePageDataError } from './actions';\n\nimport { FETCH_HOME_PAGE_DATA } from './constants';\n\nimport { HOME_PAGE_TAG } from '../../../commons/constants';\nimport apis from '../../../commons/constants/api.services';\n\nimport ServiceUtil from '../../../commons/utils/ServiceUtil';\nimport { buildUrl } from '../../../commons/utils/url';\n\nconst updateQueryParams = params => {\n  if (history && Object.keys(params).indexOf('page') > -1) {\n    const queryParamsUrl = buildUrl({\n      pathName: '/',\n      query: {\n        ...params,\n      },\n    });\n\n    history.push(queryParamsUrl);\n  }\n};\n\nexport function* loadHomePageSaga(action) {\n  try {\n    const { params = {} } = action;\n\n    const url = buildUrl({\n      pathName: apis.search,\n      query: {\n        tags: HOME_PAGE_TAG,\n        ...params,\n      },\n    });\n\n    const homePageData = yield call(ServiceUtil.fetch, url);\n\n    yield put(fetchHomePageDataSuccess(homePageData));\n\n    updateQueryParams(params);\n  } catch (err) {\n    yield put(fetchHomePageDataError(err));\n  }\n}\n\nexport default function* homePageSaga() {\n  yield takeLatest(FETCH_HOME_PAGE_DATA, loadHomePageSaga);\n}\n","export const HOME_PAGE_TAG = 'front_page';\n","/* eslint-disable require-yield */\nimport { takeLatest } from 'redux-saga/effects';\n\nimport { VOTE, VOTE_KEY } from './constants';\nimport { LocalStorageUtil } from '../../../utils/localStorage';\n\nexport function* saveUpVoteSaga(action) {\n  const {\n    data: { objectId, voted },\n  } = action;\n  const storage = new LocalStorageUtil();\n\n  if (voted) {\n    storage.saveItemInArray(VOTE_KEY, objectId);\n  } else {\n    storage.removeItemFromArray(VOTE_KEY, objectId);\n  }\n}\n\nexport default function* upVoteSaga() {\n  yield takeLatest(VOTE, saveUpVoteSaga);\n}\n","/* eslint-disable require-yield */\nimport { takeLatest } from 'redux-saga/effects';\n\nimport { HIDE_DATA, HIDE_DATA_KEY } from './constants';\nimport { LocalStorageUtil } from '../../../utils/localStorage';\n\nexport function* saveHideDataSaga(action) {\n  const { data: objectId } = action;\n\n  const storage = new LocalStorageUtil();\n\n  storage.saveItemInArray(HIDE_DATA_KEY, objectId);\n}\n\nexport default function* hideDataSaga() {\n  yield takeLatest(HIDE_DATA, saveHideDataSaga);\n}\n","import { all } from 'redux-saga/effects';\n\nimport homePageSaga from './containers/organisms/HomePage/sagas';\nimport voteSaga from './containers/atoms/UpVote/sagas';\nimport hideDataSaga from './containers/atoms/Hide/sagas';\n\nexport default function* rootSaga() {\n  yield all([homePageSaga(), hideDataSaga(), voteSaga()]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport rootReducer from './reducers';\nimport allSagas from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst configureStore = preloadedState => {\n  const store = createStore(\n    rootReducer(),\n    preloadedState,\n    composeWithDevTools(applyMiddleware(sagaMiddleware)),\n  );\n\n  sagaMiddleware.run(allSagas);\n  return store;\n};\n\nexport default configureStore;\n","import { combineReducers } from 'redux';\n\nimport homePageDataReducer from './containers/organisms/HomePage/reducer';\n\nexport default () =>\n  combineReducers({\n    homePageData: homePageDataReducer,\n  });\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport HomePage from '../src/containers/organisms/HomePage/HomePage';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\nimport './index.scss';\n\nconst state = window.__STATE__;\n\ndelete window.__STATE__;\n\nconst store = configureStore(state);\n\nReactDOM.hydrate(\n  <Provider store={store}>\n    <HomePage />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}