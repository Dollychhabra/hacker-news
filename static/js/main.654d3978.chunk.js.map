{"version":3,"sources":["containers/organisms/HomePage/selectors.js","containers/organisms/HomePage/constants.js","components/atoms/Anchor/Anchor.js","components/molecules/Header/Header.js","components/atoms/Image/Image.js","components/atoms/Para/Para.js","components/molecules/List/List.js","components/atoms/LoadMore/LoadMore.js","containers/atoms/UpVote/constants.js","components/atoms/UpVote/UpVote.js","containers/atoms/UpVote/UpVote.js","containers/atoms/UpVote/actions.js","components/organisms/HomePage/HomePage.js","utils/dateTime.js","containers/organisms/HomePage/HomePage.js","containers/organisms/HomePage/actions.js","serviceWorker.js","utils/history.js","commons/initialState/homePage.state.js","utils/localStorage.js","containers/organisms/HomePage/utils.js","containers/organisms/HomePage/reducer.js","commons/constants/api.services.js","commons/utils/ServiceUtil.js","commons/utils/url.js","containers/organisms/HomePage/sagas.js","commons/constants/index.js","containers/atoms/UpVote/sagas.js","sagas.js","store.js","reducers.js","index.js"],"names":["getHomePageDataState","state","homePageData","selectHomePageData","createSelector","homePageDataState","data","FETCH_HOME_PAGE_DATA","nbPages","page","FETCH_HOME_PAGE_DATA_ERROR","HIDE_DATA","Anchor","children","to","type","className","onClick","role","others","href","classnames","data-hal-action-name","defaultProps","Header","props","item","style","Fragment","keys","name","url","Image","src","srcset","alt","sizes","other","srcSet","onError","e","target","display","Para","inheritedStyles","List","ListType","borderseparator","nodefaultview","inline","nested","nomargin","LoadMore","currentPage","fetchHomePageData","totalPages","cp","isVisible","preventDefault","VOTE_KEY","VOTE","UpVote","vote","objectId","voted","connect","dispatch","HomePage","hideData","width","height","map","linkItem","hits","num_comments","points","objectID","title","author","created_at","Date","getUTCHours","mapStateToProps","createStructuredSelector","params","itemId","Boolean","window","location","hostname","match","history","homePageState","isFetching","error","LocalStorageUtil","getItem","key","isStorageUsable","storage","saveItem","value","setItem","removeItem","saveItemInArray","feedIds","JSON","parse","push","stringify","removeItemFromArray","items","itemIndex","findIndex","splice","this","localStorage","code","DOMException","QUOTA_EXCEEDED_ERR","length","removeHomePageData","dataIndex","initialState","homePageInitialState","homePageDataReducer","document","createBrowserHistory","require","apis","search","es6promise","polyfill","basePath","process","API_BASE_PATH","fetch","bind","additionalFetchOptions","reqOptions","withCredentials","axios","response","responseData","buildUrl","options","pathName","query","queryParams","Object","i","l","join","createQueryParamsUrl","loadHomePageSaga","homePageSaga","updateQueryParams","indexOf","queryParamsUrl","action","tags","call","ServiceUtil","put","takeLatest","saveUpVoteSaga","upVoteSaga","rootSaga","all","voteSaga","sagaMiddleware","createSagaMiddleware","configureStore","preloadedState","store","createStore","combineReducers","composeWithDevTools","applyMiddleware","run","allSagas","__STATE__","ReactDOM","hydrate","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.654d3978.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\n\nconst getHomePageDataState = state => {\n  return state.homePageData;\n};\n\nexport const selectHomePageData = createSelector(\n  getHomePageDataState,\n  homePageDataState => homePageDataState.data,\n);\n\nexport const selectTotalPageData = createSelector(\n  getHomePageDataState,\n  homePageDataState => homePageDataState.data.nbPages,\n);\n\nexport const selectCurrentPageData = createSelector(\n  getHomePageDataState,\n  homePageDataState => homePageDataState.data.page,\n);\n","export const FETCH_HOME_PAGE_DATA =\n  'HACKER_NEWS_APP/HOME_PAGE/FETCH_HOME_PAGE_DATA';\nexport const FETCH_HOME_PAGE_DATA_SUCCESS =\n  'HACKER_NEWS_APP/HOME_PAGE/FETCH_HOME_PAGE_DATA_SUCCESS';\nexport const FETCH_HOME_PAGE_DATA_ERROR =\n  'HACKER_NEWS_APP/HOME_PAGE/FETCH_HOME_PAGE_DATA_ERROR';\nexport const HIDE_DATA_KEY = 'HACKER_NEWS_APP/HOME_PAGE/HIDE_DATA_KEY';\nexport const HIDE_DATA = 'HACKER_NEWS_APP/HOME_PAGE/HIDE_DATA';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst propTypes = {\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  type: PropTypes.oneOf(['full-width', 'full-width-icon', '']),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n  role: PropTypes.string,\n};\n\nexport const createUrlSearchParams = (query) => {\n  const queryValue = query || {};\n  const queryParams = [];\n  const keys = Object.keys(queryValue);\n  for (let i = 0, l = keys.length; i < l; i += 1) {\n    queryParams.push(`${keys[i]}=${queryValue[keys[i]]}`);\n  }\n  return queryParams.join('&');\n};\n\nconst Anchor = ({\n  children,\n  to,\n  type,\n  className,\n  onClick,\n  role,\n  ...others\n}) => {\n  return (\n    <a\n      role={role}\n      href={to}\n      className={classnames('cta', type, className)}\n      onClick={onClick}\n      data-hal-action-name={typeof children === 'string' && `text: ${children}`}\n      {...others}\n    >\n      {children}\n    </a>\n  );\n};\n\nAnchor.propTypes = propTypes;\nAnchor.defaultProps = {\n  className: '',\n  children: null,\n  type: '',\n  onClick: null,\n  role: 'link',\n};\n\nexport default Anchor;\n","import React from 'react';\nimport Anchor from '../../atoms/Anchor/Anchor';\n\nconst Header = (props) => {\n  const { item, className,style } = props;\n  return (\n    <React.Fragment>\n      <div className={className} style={style}>\n        <Anchor keys={item.name} to={item.url}>\n          {item.name}\n        </Anchor>\n      </div>\n    </React.Fragment>\n  );\n};\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  alt: PropTypes.string.isRequired,\n  srcset: PropTypes.string,\n  src: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n\nconst Image = ({ className, src, srcset, sizes, alt, ...other }) => {\n  function addErrorClass(e) {\n    e.target.style.display = 'none';\n  }\n\n  return (\n    <React.Fragment>\n      <img\n        className={className}\n        src={src}\n        srcSet={srcset || null}\n        alt={alt}\n        onError={addErrorClass}\n        {...other}\n      />\n    </React.Fragment>\n  );\n};\n\nImage.defaultProps = {\n  srcset: '',\n  className: '',\n};\n\nImage.propTypes = propTypes;\n\nexport default Image;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  inheritedStyles: PropTypes.string,\n};\n\nconst Para = ({ children, className, inheritedStyles, ...others }) => (\n  <p className={className} {...others}>\n    {children}\n  </p>\n);\n\nPara.defaultProps = {\n  inheritedStyles: '',\n  className: '',\n};\n\nPara.propTypes = propTypes;\n\nexport default Para;\n","/* List*/\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  ListType: PropTypes.oneOf(['ul', 'ol']),\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  nested: PropTypes.bool,\n  inline: PropTypes.bool,\n  nodefaultview: PropTypes.bool,\n  borderseparator: PropTypes.bool,\n  nomargin: PropTypes.bool,\n  inheritedStyles: PropTypes.string,\n};\n\nconst List = ({ className, ListType, children, ...others }) => (\n  <ListType className={className} {...others}>\n    {children}\n  </ListType>\n);\n\nList.propTypes = propTypes;\n\nList.defaultProps = {\n  inheritedStyles: '',\n  ListType: 'ul',\n  className: '',\n  borderseparator: false,\n  nodefaultview: false,\n  inline: false,\n  nested: false,\n  nomargin: false,\n};\n\nexport default List;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Anchor from '../Anchor';\nimport './LoadMore.scss';\n\nconst isVisible = (currentPage, totalPages) => {\n  return !!(totalPages && currentPage !== totalPages);\n};\n\nconst LoadMore = ({ currentPage, fetchHomePageData, totalPages }) => {\n  const cp = currentPage + 1;\n  return (\n    isVisible(cp, totalPages) && (\n      <div className=\"load-more sm-text-center md-text-initial\">\n        <Anchor\n          onClick={e => {\n            e.preventDefault();\n            fetchHomePageData({ page: cp });\n          }}\n          className=\"load-more-link\"\n        >\n          More\n        </Anchor>\n      </div>\n    )\n  );\n};\n\nLoadMore.propTypes = {\n  currentPage: PropTypes.number.isRequired,\n  fetchHomePageData: PropTypes.func.isRequired,\n  totalPages: PropTypes.number.isRequired,\n};\n\nexport default LoadMore;\n","export const VOTE_KEY = 'HACKER_NEWS_APP/LIST/VOTE_KEY';\nexport const VOTE = 'HACKER_NEWS_APP/LIST/VOTE';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Anchor from '../Anchor';\nimport './UpVote.scss';\n\nconst UpVote = ({ vote, objectId }) => {\n  return (\n    <Anchor\n      onClick={e => {\n        e.preventDefault();\n        vote({\n          objectId,\n          voted: true,\n        });\n      }}\n      className=\"up-vote-link\"\n    >\n      <div className=\"up-vote-arrow\" />\n    </Anchor>\n  );\n};\n\nUpVote.propTypes = {\n  objectId: PropTypes.string.isRequired,\n  vote: PropTypes.func.isRequired,\n};\n\nexport default UpVote;\n","import { connect } from 'react-redux';\n\nimport { vote } from './actions';\n\nimport UpVote from '../../../components/atoms/UpVote/UpVote';\n\nexport const mapDispatchToProps = dispatch => {\n  return {\n    vote: data => {\n      dispatch(vote(data));\n    },\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(UpVote);\n","import { VOTE } from './constants';\n\nexport const vote = data => ({\n  type: VOTE,\n  data,\n});\n","import React from 'react';\nimport Header from '../../molecules/Header/Header';\nimport Anchor from '../../atoms/Anchor/Anchor';\nimport Image from '../../atoms/Image/Image';\nimport Para from '../../atoms/Para/Para';\nimport List from '../../molecules/List/List';\nimport LoadMore from '../../atoms/LoadMore';\nimport { getHoursFromISOString } from '../../../utils/dateTime';\nimport PropTypes from 'prop-types';\nimport './HomePage.scss';\nimport Vote from '../../../containers/atoms/UpVote/UpVote';\n\nconst HomePage = ({ hideData, homePageData }) => {\n\n  const anchorArray = [\n    {\n      name: 'top',\n      url: '/',\n    },\n    {\n      name: 'new',\n      url: '/',\n    },\n  ];\n\n  return (\n    <div className=\"homepage\">\n      <div className=\"homepage-header flex align-center\">\n        <Anchor to=\"/\" className=\"hompage-header-icon\">\n          <Image\n            src=\"y18.gif\"\n            width=\"18\"\n            height=\"18\"\n            className=\"header-image\"\n          />\n        </Anchor>\n        {anchorArray.map((linkItem) => (\n          <Header item={linkItem} className=\"header-container\" />\n        ))}\n      </div>\n      <List className=\"list-container\">\n        {homePageData &&\n          homePageData.hits.map((item) => {\n            return (\n              <div className=\"list-content flex align-center\">\n                <div className=\"comments\">{item.num_comments}</div>\n                <div className=\"points flex\">\n                  {item.points}\n\n                  {!item.voted && <Vote objectId={item.objectID} />}\n                </div>\n                <Para className=\"story-details\">\n                  <span className=\"story-title\">{item.title}</span>\n                  <Anchor\n                    to={item.url}\n                    className=\"story-url\"\n                  >{`(${item.url})`}</Anchor>\n                  <span className=\"keyword-by\">by</span>\n                  <span className=\"story-author\">{item.author}</span>\n                  <span className=\"story-time\">\n                    {getHoursFromISOString(item.created_at)}\n                    <span className=\"hours-ago-keyword\">hours ago</span>\n                  </span>\n                  <span className=\"hide-brackets\">[</span>\n                  <Anchor\n                    onClick={(e) => {\n                      e.preventDefault();\n                      hideData(item.objectId);\n                    }}\n                  >\n                    hide\n                  </Anchor>\n                  <span className=\"hide-brackets\">]</span>\n                </Para>\n              </div>\n            );\n          })}\n      </List>\n      <LoadMore />\n    </div>\n  );\n};\n\nHomePage.propTypes = {\n  hideData: PropTypes.func.isRequired,\n};\n\nexport default HomePage;\n","export const getHoursFromISOString = (data) => {\n  const date = new Date(data);\n  const hours = date.getUTCHours();\n  return hours;\n};\n","import { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { selectHomePageData } from './selectors';\nimport { fetchHomePageData, hideData } from './actions';\n\nimport HomePage from '../../../components/organisms/HomePage/HomePage';\n\nexport const mapStateToProps = createStructuredSelector({\n  homePageData: selectHomePageData,\n});\n\nexport const mapDispatchToProps = dispatch => {\n  return {\n    fetchHomePageData: () => {\n      dispatch(fetchHomePageData());\n    },\n    hideData: itemId => {\n      dispatch(hideData(itemId));\n    },\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(HomePage);\n","import {\n  FETCH_HOME_PAGE_DATA,\n  FETCH_HOME_PAGE_DATA_SUCCESS,\n  FETCH_HOME_PAGE_DATA_ERROR,\n  HIDE_DATA,\n} from './constants';\n\nexport const fetchHomePageData = params => ({\n  type: FETCH_HOME_PAGE_DATA,\n  params,\n});\n\nexport const fetchHomePageDataSuccess = data => ({\n  type: FETCH_HOME_PAGE_DATA_SUCCESS,\n  data,\n});\n\nexport const fetchHomePageDataError = error => ({\n  type: FETCH_HOME_PAGE_DATA_ERROR,\n  error,\n});\n\nexport const hideData = data => ({\n  type: HIDE_DATA,\n  data,\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// eslint-disable-next-line import/no-mutable-exports\nlet history;\n\nif (typeof document !== 'undefined') {\n  // eslint-disable-next-line global-require\n  const { createBrowserHistory } = require('history');\n\n  history = createBrowserHistory();\n}\n\nexport default history;\n","const homePageState = {\n  isFetching: false,\n  data: {\n    hits: [],\n    nbPages: 0,\n    page: 0,\n  },\n  error: null,\n};\n\nexport default homePageState;\n","/**\n *\n * A Utility to store Key Pair value in localStorage\n */\n\nexport class LocalStorageUtil {\n  constructor() {\n    this.storage = {};\n    if (isStorageUsable()) {\n      this.storage = window.localStorage;\n    }\n  }\n\n  /**\n   *\n   * @param {string} - Key name\n   * @description - Get Value from localStorage\n   */\n  getItem = key => {\n    return isStorageUsable() && typeof this.storage !== 'undefined'\n      ? this.storage.getItem(key)\n      : '';\n  };\n\n  /**\n   *\n   * @param { string } key - Key Name\n   * @param { string } value - Key Value\n   * @description - Save Value against key into localStorage\n   */\n  saveItem = (key, value) => {\n    if (isStorageUsable()) {\n      this.storage.setItem(key, value);\n    }\n  };\n\n  /**\n   *\n   * @param { string } name Key Name\n   * @description - Remove `Key Value Pair` from localStorage\n   */\n  removeItem = key => {\n    if (isStorageUsable()) {\n      this.storage.removeItem(key);\n    }\n  };\n\n  /**\n   *\n   * @param { string } key - Key Name\n   * @param { string } value - Key Value\n   * @description - Saves Value in Array against key into localStorage\n   */\n  saveItemInArray = (key, value) => {\n    const feedIds = JSON.parse(this.getItem(key) || '[]');\n    feedIds.push(value);\n    this.saveItem(key, JSON.stringify(feedIds));\n  };\n\n  /**\n   *\n   * @param { string } key - Key Name\n   * @param { string } value - Key Value\n   * @description - Removes Value from Array against key into localStorage\n   */\n  removeItemFromArray = (key, value) => {\n    const items = JSON.parse(this.getItem(key) || '[]');\n    const itemIndex = items.findIndex(item => item === value);\n    items.splice(itemIndex, 1);\n    this.saveItem(key, JSON.stringify(items));\n  };\n}\n\n/**\n *\n * @description - Checks is local storage available or not\n */\nexport const isStorageUsable = () => {\n  if (typeof window === 'undefined') {\n    return false;\n  }\n  const storage = window.localStorage;\n  try {\n    storage.setItem('testkey', 'test');\n    storage.removeItem('testkey');\n  } catch (e) {\n    if (e.code === DOMException.QUOTA_EXCEEDED_ERR && storage.length === 0) {\n      return false;\n    }\n  }\n  return true;\n};\n","import { LocalStorageUtil } from '../../../utils/localStorage';\nimport { HIDE_DATA_KEY } from './constants';\nimport { VOTE_KEY } from '../../atoms/UpVote/constants';\n\nexport const removeHomePageData = (homePageState, objectID) => {\n  const { data, ...others } = homePageState;\n  const { hits } = data;\n\n  const dataIndex = hits.findIndex(data => {\n    return data.objectID === objectID;\n  });\n\n  hits.splice(dataIndex, 1);\n\n  return {\n    data: {\n      ...data,\n      hits: [...hits],\n    },\n    ...others,\n  };\n};\n\nexport const filterDataWithHiddenData = homePageData => {\n  const storage = new LocalStorageUtil();\n\n  const hiddenDataIds = JSON.parse(storage.getItem(HIDE_DATA_KEY) || '[]');\n\n  if (hiddenDataIds.length) {\n    const { hits } = homePageData;\n    const filteredHits = hits.filter(hit => {\n      return hiddenDataIds.indexOf(hit.objectID) === -1;\n    });\n\n    return {\n      ...homePageData,\n      hits: filteredHits,\n    };\n  }\n  return homePageData;\n};\n\nexport const updateUpVoteInHomePageData = homePageData => {\n  const storage = new LocalStorageUtil();\n\n  const votedDataIds = JSON.parse(storage.getItem(VOTE_KEY) || '[]');\n\n  if (votedDataIds.length) {\n    const { hits } = homePageData;\n    const votedHits = hits.map(hit => {\n      const cloneHit = { ...hit };\n\n      if (votedDataIds.indexOf(cloneHit.objectID) > -1) {\n        cloneHit.voted = true;\n      }\n\n      return cloneHit;\n    });\n\n    return {\n      ...homePageData,\n      hits: votedHits,\n    };\n  }\n  return homePageData;\n};\n","import {\n  FETCH_HOME_PAGE_DATA,\n  FETCH_HOME_PAGE_DATA_SUCCESS,\n  FETCH_HOME_PAGE_DATA_ERROR,\n  HIDE_DATA\n} from './constants';\n\nimport { VOTE } from '../../atoms/UpVote/constants';\n\nimport homePageInitialState from '../../../commons/initialState/homePage.state';\n\nimport { removeHomePageData } from './utils';\n\nconst initialState = homePageInitialState;\n\nconst homePageDataReducer = (state = initialState, { type, data, error }) => {\n  switch (type) {\n    case FETCH_HOME_PAGE_DATA:\n      return {\n        ...state,\n        isFetching: true,\n      };\n\n    case FETCH_HOME_PAGE_DATA_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        data,\n      };\n\n    case FETCH_HOME_PAGE_DATA_ERROR:\n      return {\n        ...state,\n        isFetching: false,\n        error,\n      };\n\n    case HIDE_DATA:\n      return removeHomePageData(state, data);\n\n    case VOTE:\n      return {\n        ...state,\n        data: { ...state.data },\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default homePageDataReducer;\n","const apis = {\n  search: 'https://hn.algolia.com/api/v1/search',\n};\n\nexport default apis;\n","import axios from 'axios';\nimport es6promise from 'es6-promise';\n\nes6promise.polyfill();\n\nclass ServiceUtils {\n  constructor() {\n    this.basePath = process.env.API_BASE_PATH || '';\n    this.fetch = this.fetch.bind(this);\n  }\n\n  async fetch(url, additionalFetchOptions) {\n    let responseData;\n\n    // Request options in axios format\n    const reqOptions = {\n      url: `${this.basePath}${url}`,\n      withCredentials: false,\n      ...additionalFetchOptions,\n    };\n\n    try {\n      const response = await axios(reqOptions);\n      responseData = response.data;\n    } catch (err) {\n      throw err;\n    }\n\n    return responseData;\n  }\n}\n\nexport default new ServiceUtils();\n","/**\n *\n * @param {Object} query - Object of query params\n * @returns {String}\n */\nexport const createQueryParamsUrl = (query = {}) => {\n  const queryParams = [];\n\n  const keys = Object.keys(query);\n\n  for (let i = 0, l = keys.length; i < l; i += 1) {\n    const value = `${query[keys[i]]}`;\n    queryParams.push(`${keys[i]}=${value}`);\n  }\n\n  return queryParams.join('&');\n};\n\n/**\n *\n * @param {Object} options - Url options\n * @returns {String} - Url\n * @description - Creates a url with query params\n */\nexport const buildUrl = options => {\n  if (typeof options === 'object') {\n    const { pathName, query } = options;\n\n    let url = pathName;\n\n    if (typeof query === 'object') {\n      url += `?${createQueryParamsUrl(query)}`;\n    }\n    return url;\n  }\n\n  return options;\n};\n\nexport const extractDomainFromUrl = (url = '') => {\n  const nonEmptyUrl = url || '';\n  const urlParts = nonEmptyUrl\n    .replace('http://', '')\n    .replace('https://', '')\n    .split(/[/?#]/);\n  return urlParts[0];\n};\n","import { call, put, takeLatest } from 'redux-saga/effects';\nimport history from '../../../utils/history';\n\nimport { fetchHomePageDataSuccess, fetchHomePageDataError } from './actions';\n\nimport { FETCH_HOME_PAGE_DATA } from './constants';\n\nimport { HOME_PAGE_TAG } from '../../../commons/constants';\nimport apis from '../../../commons/constants/api.services';\n\nimport ServiceUtil from '../../../commons/utils/ServiceUtil';\nimport { buildUrl } from '../../../commons/utils/url';\n\nconst updateQueryParams = params => {\n  if (history && Object.keys(params).indexOf('page') > -1) {\n    const queryParamsUrl = buildUrl({\n      pathName: '/',\n      query: {\n        ...params,\n      },\n    });\n\n    history.push(queryParamsUrl);\n  }\n};\n\nexport function* loadHomePageSaga(action) {\n  try {\n    const { params = {} } = action;\n\n    const url = buildUrl({\n      pathName: apis.search,\n      query: {\n        tags: HOME_PAGE_TAG,\n        ...params,\n      },\n    });\n\n    const homePageData = yield call(ServiceUtil.fetch, url);\n\n    yield put(fetchHomePageDataSuccess(homePageData));\n\n    updateQueryParams(params);\n  } catch (err) {\n    yield put(fetchHomePageDataError(err));\n  }\n}\n\nexport default function* homePageSaga() {\n  yield takeLatest(FETCH_HOME_PAGE_DATA, loadHomePageSaga);\n}\n","export const HOME_PAGE_TAG = 'front_page';\n","/* eslint-disable require-yield */\nimport { takeLatest } from 'redux-saga/effects';\n\nimport { VOTE, VOTE_KEY } from './constants';\nimport { LocalStorageUtil } from '../../../utils/localStorage';\n\nexport function* saveUpVoteSaga(action) {\n  const {\n    data: { objectId, voted },\n  } = action;\n  const storage = new LocalStorageUtil();\n\n  if (voted) {\n    storage.saveItemInArray(VOTE_KEY, objectId);\n  } else {\n    storage.removeItemFromArray(VOTE_KEY, objectId);\n  }\n}\n\nexport default function* upVoteSaga() {\n  yield takeLatest(VOTE, saveUpVoteSaga);\n}\n","import { all } from 'redux-saga/effects';\n\nimport homePageSaga from './containers/organisms/HomePage/sagas';\nimport voteSaga from './containers/atoms/UpVote/sagas';\n\nexport default function* rootSaga() {\n  yield all([homePageSaga(), voteSaga()]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport rootReducer from './reducers';\nimport allSagas from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst configureStore = preloadedState => {\n  const store = createStore(\n    rootReducer(),\n    preloadedState,\n    composeWithDevTools(applyMiddleware(sagaMiddleware)),\n  );\n\n  sagaMiddleware.run(allSagas);\n  return store;\n};\n\nexport default configureStore;\n","import { combineReducers } from 'redux';\n\nimport homePageDataReducer from './containers/organisms/HomePage/reducer';\n\nexport default () =>\n  combineReducers({\n    homePageData: homePageDataReducer,\n  });\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport HomePage from '../src/containers/organisms/HomePage/HomePage';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\nimport './index.scss';\n\nconst state = window.__STATE__;\n\ndelete window.__STATE__;\n\nconst store = configureStore(state);\n\nReactDOM.hydrate(\n  <Provider store={store}>\n    <HomePage />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}